for aws certified cloud practitioner level we should know: 
vpc subnets, internet gateways, security groups , 
network ACL (NACL), VPC flow logs, vpc peering , vpc endpoints,
site to site vpn and direct connect..
transit gateway...


--- Ip addresses in AWS--------
 -> ipv4 internet protocol version 4 (4.3 billion addresses)
    -> public ipv4 can be used on the internet.
    -> ec2 instance gets a new public IP address every time you stop then start it (default)
    -> private IPv4 -> can be used on private networks (LAN) such as internal AWS networking (e.g. 192.16.1.1)
    -> private ipv4 is fixed for ec2 instances even if you start/stop them...

-> elastic IP -> allows you to attach a fixed public ipv4 address to ec2 instance 
note: has ongoing cost if not attached to ec2 instance or if the ec2 instance is stopped..
IPv6 -> internet protocol version 6 (3.4 * 10pow38 addresses)
    -> every ip address is public (no private range)
    -> example: 2001:db8:3333:4444:cccc:dddd:eeee:ffff


----- vpc and subnets primer ------

vpc -> virtual private cloud: private network to deploy your resources (regional resource)
subnets allow you to partition your network inside your vpc (availability zone resource)
a public subnet is a subnet that is accessible from the internet.
-> to define access to the internet and between subnets, we use route tables.

=> internet gateway and nat gateways -----
-> internet gateways helps our vpc instances connect with the internet.
-> public subnets have a route to the internet gateway.

-> NAT gateways (AWS-managed) and NAT instances (self-managed) allow your instances in your private subnets to access the internet
while remaining private..
 

---- network ACL and Security groups ------

NACL (network acl)
    -> a firewall which controls traffic from and to subnet.
    -> can have allow and deny rules
    -> are attached at the subnet level.
    -> rules only include IP addresses...

Security Groups 
-> a firewall that controls traffic to and from and ENI/an EC2 instance.
-> can have only allow rules.
-> rules include IP addresses and other security groups.


network acl operates at the subnet level while security group operates at the instance level...
-> network acl supports allow rules and deny rules while security group supports allow rules only...
-> network acl is stateless: i.e. return traffic must be explicitly allowed by rules.. while securit group is stateful: i.e. return traffic is automatically allowed, regardless of any rules.


------ vpc flow logs --------

-> capture information about IP traffic going into your interfaces:
    -> vpc flow logs.
    -> subnet flow logs.
    -> elastic network interface flow logs.

-> helps to monitor and troubleshoot connectivity issues. example:
    -> subnets to internet
    -> subnets to subnets.
    -> internet to subnets

-> captures network information from aws managed interfaces too: Elastic load balancers.
elasticcache, RDS, aurora, etc.

-> vpc flow logs data can go to s3, cloudWatch logs, and kinesis data firehose..


----- vpc peering ----------

-> connect two vpc, privately using aws network.
-> make them behave as if they were in the same network.
-> must not have overlapping CIDR (IP address range)
-> vpc peering connection is not transitive (must be established for each vpc that need to communicate with one another)


--- vpc endpoints --------

-> endpoints allow you to connect to aws services using a private 
network instead of the public www network..

-> this gives you enhanced security and lower latency to access aws services.

-> vpc endpoint gateway: s3 and dynamoDB
-> vpc enpoint interface: the rest...

=> aws privatelink (vpc endpoint services)
-> most secure and scalable way to expose a service to 1000s of vpcs
-> does not require vpc peering, internet gateway, NAT, route tables...
-> requires a network load balancer (service VPC) and ENI (customer VPC)


-- aws client vpn -----
-> connect from your computer using OpenVPN to your private network in AWS and on-premises.
-> allow you to connect to your ec2 instances over a private IP (just as if you were in the private VPC network..)



---- transit gateway -------

-> for having transitive peering between thousands of vpc and on-premises, hub and 
spoke (star) connection

-> one single gateway to provide this functionality
-> works with direct connect gateway, vpn connections..


------vpc summary --------

vpc : virtual private cloud
subnets: tied to an AZ, network partition of the VPC
Internet Gateway: at the vpc level, provide internet access..
NAT Gateway/ Instances: give internet access to private subnets..
NACL: stateless, subnet rules for inbound and outbound
security groups : stateful, operate at the EC2 instance level or ENI.
VPC peering  : connect two vpc with one non overlapping ip ranges nontransitive.
elastic IP -> fixed public IPv4 , ongoing cost if not in use.

vpc endpoints -> provide private access to aws services within vpc.
private link -> privately connect to a service in a 3rd party vpc.
vpc flow logs -> network traffic logs.
site to site vpn: vpn over public internet between on-premises DC and aws.
client vpn : openVPN connection from your computer into your vpc.
direct connect: direct private connection to aws.
transit gateway: connect thousands of vpc and on-premises networks together..

------site to site vpn and direct connect ---
site to site vpn 
     -> connect an on-premises vpn to aws 
     -> the connection is automatically encrypted
     -> goes over the public internet..
    -> to establish site to site vpn
        -> on-premises: must use a customer gateway (cgw)
        -> aws: must use a virtual private gateway (VGW)
-> direct connect (DX)
    -> establish a physical connection between on-premises and aws.
    -> the connection is private, secure and fast.
    -> goes over a private network.
    -> takes at least a month to establish...







